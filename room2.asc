// Syds Küche (Syd)

bool bMilk; // The player can lose the milk item. So, an extra variable is necessary.
int cutscene;

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oTuerFlur.init_object(4);
	//oTuerSyd.init_object(3);
	Door[eDoorNumSyd].Init(oTuerSyd, hTuerSyd);
  oRunningWater.SetView(VWATER);
  oWater.Clickable = false;
  oTVScreen.Clickable = false;
  oTVScreen.Visible = false;
  if (player.PreviousRoom != 1 && player.PreviousRoom != 3) aSydsRoom.Play(); // Prevents the bgm from starting all over again when entering from another room where the same bgm is used.
  if (player.PreviousRoom == 26) ResetRoom(26); // Resets the HAMSTAR commercial.
}

function room_FirstLoad()
{
  // Intro
  StartCutscene(eSkipESCOrRightButton);
  Wait(5);
  aSound72.Play();
  oKuehlschrank.Visible=true;
  oMilk.Visible = true;
  Wait(20);
  player.Say("Das ist mal wieder typisch.");
  Wait(5);
  player.Say("Wenn ich Hunger habe, ist nichts zum Futtern im Kühlschrank.");
  Wait(5);
  player.Say("Muss ich wohl oder übel zum PizzaShack runter.");
  Wait(5);
  aSound50.Play();
	oKuehlschrank.Visible = false;
  oMilk.Visible = false;
  Wait(10);
  player.Walk(288, 128, eBlock, eWalkableAreas);
  player.FaceDirection(eDirUp);
  Wait(5);
  player.Say("Argg!");
  player.Say("Ohne Geld kaufts sich schlecht.");
  Wait(5);
  ControllMode(true, true);
  EndCutscene();
}

function room_AfterFadeIn()
{
  if (player.PreviousRoom == 10)
  {
    Wait(5);
    player.Say("So ein Sch....");
    player.Say("Und dann fragen sich diese dämlichen Politiker warum der Schwarzmarkt blüht.");
    jeffTalk++;
    cTom.ChangeRoom(25);
    dJeff.SetOptionState(5, eOptionOn);
    ControllMode(true, true);
  }
}

function microwave() // An external function. That way, it's only written once.
{
  if (player.ActiveInventory == iHamster)
  {
    if (!bMicrowave) // The player hasn't tried to fry the hamster yet.
    {
      if (oMikrowelle.Visible == false) // Necessary because this function is used on the hotspot (closed microwave) as well as the object (opened microwave).
      {
        aSound50.Play();
        oMikrowelle.Visible = true;
        Wait(10);
      }
      player.LoseInventory(iHamster);
      oHamster.Visible = true;
      Wait(10);
      aSound50.Play();
      oMikrowelle.Visible = false;
      Wait(20);
      aSound8.Play();
      Wait(50);
      aSound8.Play();
      Wait(50);
      aSound8.Play();
      Wait(20);
      aSound8.Play();
      Wait(10);
      player.Say("Ach, stimmt.");
      player.Say("Das Ding ist kaputt.");
      Wait(10);
      player.Say("Muss ich mir etwas anderes überlegen.");
      Wait(5);
      aSound50.Play();
      oMikrowelle.Visible = true;
      Wait(50);
      aSound4.Play();
      oHamster.Visible = false;
      player.AddInventory(iHamster);
      Wait(20);
      aSound50.Play();
      oMikrowelle.Visible = false;
      bMicrowave = true;
    } else player.Say("Das funktioniert nicht. Die Mikrowelle ist immer noch kaputt.");
  } else player.Say("Warum sollte ich das in die Mikrowelle stecken?");
}

function hFaucet_AnyClick()
{
  if (any_click_move(80, 132, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ein Wasserhahn. Nichts besonderes.");
    }
    else if (UsedAction(eActUse) || UsedAction(eActOpen))
    {
      Wait(5);
      if (oWater.Visible == false)
      {
        oRunningWater.Visible = true;
        PlayAmbientSound(1, 95, 150, 80, 90);
        Wait(50);
        oWater.Visible = true;
        Wait(10);
        StopAmbientSound(1);
        oRunningWater.Visible = false;
      } else player.Say("Die Spüle ist bereits voll.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull))
    {
      Wait(5);
      player.Say("Soll ich etwa den Wasserhahn rausreißen?");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Der ist bereits zu.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Da gibts nicht zum dran rumdrücken.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 722)
        {
          oRunningWater.Visible = true;
          PlayAmbientSound(1, 95, 150, 80, 90);
          Wait(50);
          iGlas.Graphic = 726;
          StopAmbientSound(1);
          oRunningWater.Visible = false;
        } else player.Say("Das Glas ist nicht leer.");
      } else Unhandled();
    }
    else Unhandled();
  }
}

function hSink_AnyClick()
{
  if (any_click_move(80, 132, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Meine Spüle. Ausnahmsweise liegt mal kein dreckiges Geschirr drin.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Ich habe nichts zu spülen.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull))
    {
      Wait(5);
      player.Say("Ich möchte das Spülbecken nicht rausreißen.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      if (oWater.Visible)
      {
        player.Say("Gut, lassen wir das Wasser eben wieder ab.");
        Wait(20);
        PlayAmbientSound(1, 95, 150, 80, 90);
        oWater.Visible = false;
        StopAmbientSound(1);
      } else player.Say("Der Abfluss ist bereits offen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      if (oWater.Visible)
      {
        player.Say("Der Abfluss ist bereits zu.");
      } else player.Say("Den Abfluss mache ich zu, wenn ich Wasser einlasse.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Das ergibt keinen Sinn.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iHamster)
      {
        if (bMicrowave)
        {
          if (iHamster.Graphic == 729)
          {
            if (oWater.Visible)
            {
              player.Say("Und heb.");
              player.LoseInventory(iHamster);
              Wait(5);
              player.LockView(HAMSTERDROWNED);
              Wait(300);
              iHamster.Graphic = 730;
              player.UnlockView();
              player.AddInventory(iHamster);
              player.Say("Armer kleiner Racker.");
              player.Say("Ist ganz friedlich ertrunken.");
              clousoDeath = 1;
            } else player.Say("Dafür muss ich erst Wasser einlassen.");
          } else player.Say("Der Hamster ist schon tot.");
        } else player.Say("Warum sollte ich das tun?");
      }
      else if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic != 722 && iGlas.Graphic != 724)
        {
          player.Say("Gut, schütten wir das Glas aus.");
          PlayAmbientSound(1, 95, 150, 80, 90);
          Wait(60);
          iGlas.Graphic = 722;
          StopAmbientSound(1);
        }
        else if (iGlas.Graphic == 724)
        {
          player.Say("Die Socke will ich nicht in die Spüle kippen.");
        } else player.Say("Das muss nicht gespült werden.");
      } else player.Say("Das muss nicht gespült werden.");
    }
    else Unhandled();
  }
}

/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuerSyd_AnyClick()
{
	//if ( any_click_on_door (3, oTuerSyd, 28, 125, eDirUp, 1, 48, 125, eDirRight) == 0 ) Unhandled ();
	if ( Door[eDoorNumSyd].Click() == 0 ) Unhandled();
}

function hTuerFlur_AnyClick()
{
	if ( any_click_on_door (4, oTuerFlur, 288, 127, eDirUp, 3, 280, 124, eDirDown) == 0 ) Unhandled ();
}


/****************************
*   Objekt-Funktionen
****************************/
function oKuehlschrank_AnyClick()
{
	if (any_click_move(223, 132, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);	
			player.Say("Wo ist der Käse?");
			player.Say("Hehehehe ...");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("");
			}
			else if ( player == cSyd )
			{			
				player.Say("Der ist mir zu schwer.");
			}
		}
		else if (UsedAction(eActUse) || UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(50);
			oKuehlschrank.Visible = false;
      if (oMilk.Visible) oMilk.Visible = false;
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("");
			}
			else if ( player == cSyd )
			{			
				player.Say("Der ist doch schon offen.");
			}
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("");
			}
			else if ( player == cSyd )
			{			
				player.Say("Damit er umfällt?");
			}
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("");
			}
			else if ( player == cSyd )
			{			
				player.Say("Damit er umfällt?");
			}
		}
		else Unhandled();
	}
}

function oTisch_AnyClick()
{
	if (any_click_move(211, 133, eDirDown))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Syds Tisch sein.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Das ist mein Tisch. An ihm esse ich immer.");
			}
			else
			{
				player.Say("Ein Tisch, der in der Küche steht.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed haben selber Tisch.");
			}
			else
			{			
				player.Say("Vielleicht sollte ich ihn einfach nehmen.");
				Wait(5);
				player.Say("Vielleicht lasse ich ihn lieber stehen.");
			}
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed nix haben Hunger.");
			}
			else
			{			
				player.Say("Sich an den Tisch setzen und etwas essen. Keine schlechte Idee.");
        player.Say("Wenn ich etwas zu essen hier hätte.");
			}
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed sich fragen, wie sollen das machen?");
			}
			else
			{			
				player.Say("Und wie genau stellst du dir das vor?");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed nix wollen umschubsen Tisch.");
			}
			else
			{			
				player.Say("Damit er umfällt?");
			}
		}
		else Unhandled();
	}
}

function oMikrowelle_AnyClick()
{
	if (any_click_move(149, 138, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Gerät zum heiß machen von Sachen. Achmed wollten mal Katze trocknen.");
				player.FaceDirection(eDirDown);
				player.Say("Zum Glück haben Syd, Achmed davon abgehalten.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Meine Mikrowelle. Leer!");
				player.Say("Früher hab' ich schlimme Sachen damit gemacht ...");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed haben selber Heiß-mach-Dingens.");
			}
			else
			{			
				player.Say("Jetzt nicht.");
			}
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Plinggg.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Ich hab grad kein Ei bei mir.");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.FaceDirection(eDirDown);
				player.Say("Machen Scherz mit Achmed?");
			}
			else
			{
				player.Say("Die ist schon auf.");
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			PlaySound(50);
			oMikrowelle.Visible = false;
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Das nix bringen Achmed.");
			}
			else
			{			
				player.Say("Die steht da schon richtig.");
			}
		}
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      microwave();
    }
		else Unhandled();
	}
}

function oFernbedienung_AnyClick()
{
	if (any_click_move(180, 136, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Fernbedienung sein.");
			}
			else
			{			
				player.Say("Die Fernbedienung.");
			}
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Klasse.");
			Wait(5);
			PlaySound(4);
			oFernbedienung.Visible = false;
			player.AddInventory(iFernbedienung);
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Geladene Stromgeneratoren drin sein.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Im Batteriefach sind zwei voll geladenen Akkus, sonst nichts.");
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Schon zu sein.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Das Batteriefach ist bereits zu.");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed besser nehmen.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Vielleicht sollte ich sie einfach nehmen.");
			}
		}
		else Unhandled();
	}
}


/****************************
*   Hotspot-Funktionen
****************************/
function hFernseher_AnyClick()
{
	if (any_click_move(223, 132, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			if (player == cAchmed)
			{
				player.Say("Syd haben altes Fernseher.");
			}
			else if (player == cSyd)
			{			
				player.Say("Mein Fernseher.");
				player.FaceDirection(eDirUp);
				player.Say("Sollte in keinem Haushalt fehlen!");
			}
			else
			{
				player.Say("Ein normaler Röhrenfernseher. Alt, aber absolut tauglich.");
        player.Say("Sofern man keine Sender in HD schaut.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if (player == cAchmed)
			{
				player.Say("Zu schwer sein für Achmed.");
			}
			else
			{			
				player.Say("Ja, vielleicht sollte ich ihn einfach nehmen. Aber er ist ziemlich schwer.");
				player.Say("Ich verschiebe das auf später.");
			}
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if (player == cAchmed)
			{
				player.Say("Achmed brauchen Fernbedienung.");
			}
			else
			{
				player.Say("Er steht zu weit oben.");
				player.Say("Ich brauche die Fernbedienung!");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if (player == cAchmed)
			{
				player.Say("Achmed nix wollen machen kaputt Seherfern von Syd.");
			}
			else
			{			
				player.Say("Ich brauche momentan keine elektronischen Bauteile.");
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if (player == cAchmed)
			{
				player.Say("Zu sein.");
			}
			else
			{			
				player.Say("Der Deckel ist bereits zu.");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if (player == cAchmed)
			{
				player.Say("Nix da.");
			}
			else if (player == cSyd)
			{			
				player.Say("Dann fällt er herunter.");
			}
		}
		else if (UsedAction(eActUseInventory))
		{
			if (player.ActiveInventory == iFernbedienung)
			{
        aSound51.Play();
        Wait(20);
        oTVScreen.Visible = true;
        Wait(20);
        if (jeffTalk == 0) // Syd hasn't spoken with Jeff about the diary yet.
        {
          if (cutscene < 3)
          {
            int nixnr = cNix.Room;
            int nixx = cNix.x;
            int nixy = cNix.y;
            cNix.ChangeRoom(2, 200, 35);
            
            if (cutscene == 0)
            {
              cNix.Say("Der Weltraum. Unendliche Langweile.");
            }
            else if (cutscene == 1)
            {
              cNix.Say("Kaffee, schwarz, Junge! Oder muss erstmal die Fäuste fliegen lassen?");
            }
            else if (cutscene == 2)
            {
              cNix.Say("Darf ich jetzt endlich auch mal Captain sein?");
            }
            cutscene++;
            cNix.ChangeRoom(nixnr, nixx, nixy);
          } else player.Say("Nichts interessantes.");
          aSound51.Play();
          Wait(20);
          oTVScreen.Visible = false;
          Wait(10);
        }
        else if (jeffTalk == 1) // Syd has spoken with Jeff about Britney's Diary and now plans to order one.
        {
          player.ChangeRoom(10); // News TV
        }
        else // Syd has seen the news. From this point on there will only be the Hamstar commecials on the TV.
        {
          player.ChangeRoom(26); // Hamstar TV
        }
			}
      else Unhandled();
		}
		else Unhandled();
	}
}

function hKuehlschrank_AnyClick()
{
	if (any_click_move(223, 132, eDirUp))
	{
		if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Syds Kühlschrank sein.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Mein Kühlschrank.");
				player.Say("Echt cool.");
			}
			else
			{
				player.Say("Ein Kühlschrank. Er ist Bestandteil der Wohnung.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Zu schwer sein für Achmed.");
			}
			else
			{			
				player.Say("Scherzkeks!");
			}
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			PlaySound (72);
			oKuehlschrank.Visible = true;
      if (bMilk == false) oMilk.Visible = true; 
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Bereits zu sein.");
			}
			else
			{			
				player.Say("Gib's auf, der ist schon zu.");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Nein.");
			}
			else
			{			
				player.Say("Damit er umfällt?");
			}
		}
		else Unhandled();
	}
}

function hMikrowelle_AnyClick()
{
	if (any_click_move(149, 138, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Dingens zum heiß machen.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Meine Mikrowelle.");
				player.Say("Echt heiss.");
			}
			else
			{
				player.Say("Eine Mikrowelle.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Nein.");
			}
			else
			{			
				player.Say("Vergiss es.");
			}
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			aSound50.Play();
      oMikrowelle.Visible = true;
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed könnten nehmen, und packen in Karton. Aber sonst bereits sein zu.");
			}
			else
			{			
				player.Say("Unsinnige Aktionen bringen kein gutes Ergebnis.");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Stehen gut da.");
			}
			else
			{			
				player.Say("Bewegt sich nicht.");
			}
		}
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      microwave();
    }
		else Unhandled();
	}
}

function oGlas_AnyClick()
{
  if (any_click_move(105, 135, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ein leeres Glas.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was soll ich es benutzen?");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      aSound4.Play();
      oGlas.Visible = false;
      player.AddInventory(iGlas);
    }
    else if (UsedAction(eActOpen) || UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Dazu muss ich das Glas erstmal nehmen.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Das Glas zu bewegen bringt genau gar nichts.");
    }
    else Unhandled();
  }
}

function oMilk_AnyClick()
{
  if (any_click_move(223, 132, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine Packung Milch.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Dafür muss ich sie erstmal aus dem Kühlschrank nehmen.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      aSound4.Play();
      oMilk.Visible = false;
      player.AddInventory(iMilk);
      bMilk = true;
    }
    else if (UsedAction(eActOpen) || UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Offen oder zu, das macht keinen Unterschied.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Was habe ich davon, wenn ich die Packung verschiebe?");
    }
    else Unhandled();
  }
}

/****************************
*   Regionen-Funktionen
****************************/

