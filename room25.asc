// room script file

// *****************************
// Raumfunktionen
// *****************************

function room_Load()
{
  oDiary1.Clickable=false;
  oDiary2.Clickable=false;
  
  if (cTom.Room == 25)
  {    
    oDiary1.Visible=true;
    oDiary2.Visible=true;
    
    oPlakat.Visible=true;
    
    RemoveWalkableArea(2);
  }
  if (cEd.Room == 25)
  {
    cEd.FaceDirection(eDirUp);
  }
    
  Game.StopAudio(eAudioTypeAmbientSound);
}

function room_AfterFadeIn()
{
  aMusic11.Play();
}

function room_RepExec()
{

}

// *****************************
// Hotspots
// *****************************

function hPizzaShack_AnyClick()
{
  if (any_click_move(308, 140, eDirRight))
	{
		if (UsedAction(eActWalkTo) || UsedAction(eActUse))
		{
			Wait(5);
			player.ChangeRoom(13, 6, 135);
			player.FaceDirection(eDirRight);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			player.Say("Da geht es nach nebenan ... zum Pizza Shack.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("???");
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			player.Say("???");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Schwarzes Dings lassen nicht zu."))
				player.Say("Der Teerbelag ist nicht flexibel genug.");
		}
		else Unhandled();
	}
}

function hTuer_AnyClick()
{
  if (any_click_move(274, 103, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine Tür.");
    }
    else if (UsedAction(eActOpen) || UsedAction(eActUse))
    {
      Wait(5);
      player.FaceDirection(eDirDown);
      player.Say("Nicht in dieser Episode.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Komm Tür, lass dich drücken!");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull))
    {
      Wait(5);
      player.Say("Ich reiße keine Türen aus den Angeln.");
    }
    else Unhandled();
  }
}

function hFenster_AnyClick()
{
  // 44;
  
  if (any_click_move(mouse.x, 118, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ich kann ins Innere sehen.");
    }
    else if (UsedAction(eActOpen) || UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Von außen lassen sich die Fenster nicht öffnen.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Die Fenster sind bereits verschlossen.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Absolut unbewegbar.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Ich brauche keine Fenster.");
    }
    else Unhandled();
  }
}

function hKiste_AnyClick()
{
  if (any_click_move(259, 137, eDirDown))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine einfach so in der Gegend stehende Kiste.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Die möchte ich nicht haben.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Es interessiert mich absolut gar nicht, was dort drin ist.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Die ist bereits zu.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was?");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Sehe keinen Grund, die Kiste zu bewegen.");
    }
    else Unhandled();
  }
}

function hTonneBoden_AnyClick()
{
  if (any_click_move(136, 139, eDirLeft))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine umgefallene Tonne.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Es ist nicht meine Aufgabe, hier aufzuräumen.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was?");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Der Deckel ist weit und breit nicht zu finden.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Das Teil ist bereits offen.");
    }
    else Unhandled();
  }
}

function hTonneNormal_AnyClick()
{
  if (any_click_move(13, 124, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Eine Mülltonne, die im Gegensatz zur anderen noch steht.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Ohne guten Grund wühle ich nicht im Müll.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Der Deckel ist schon drauf.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush) || UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Ich bin kein Müllmann.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was?");
    }
    else Unhandled();
  }
}

// *****************************
// Objekte
// *****************************

function oPlakat_AnyClick()
{
  if (any_click_move(91, 117, eDirUp))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("\"Zum Verkauft\"");
      player.FaceDirection(eDirDown);
      Wait(5);
      player.LockView(SYDFACEPALM);
      player.Animate(0, 5, eOnce, eBlock, eForwards);
      Wait(50);
      player.UnlockView();
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Ich sehe nichts, was ich öffnen könnte.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Ich sehe nichts, was ich schließen könnte.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Weiter in die Wand drücken geht nicht.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull))
    {
      Wait(5);
      player.Say("Ich brauche das Plakat nicht.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was?");
    }
    else Unhandled();
  }
}
