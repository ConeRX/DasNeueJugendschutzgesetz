// Syds Flur (Syd)

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oTuerBad.init_object(5);
	oTuerFlur.init_object(6);
	oTuerKueche.init_object(4);
  oBucket.SetView(VWATERBUCKET, 0, 0);
  oBucket.Animate(0, 1, eRepeat, eNoBlock, eForwards);
}

function room_AfterFadeIn()
{
	if (player.PreviousRoom != 2 && player.PreviousRoom != 4) aSydsRoom.Play(); // Prevents the bgm from starting all over again when entering from another room where the same bgm is used.
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuerKueche_AnyClick()
{
	if ( any_click_on_door(4, oTuerKueche, 280, 124, eDirUp, 2, 288, 127, eDirDown) == 0 ) Unhandled ();
}

function hTuerBad_AnyClick()
{
	if ( any_click_on_door(5, oTuerBad, 157, 123, eDirUp, 4, 153, 108, eDirDown) == 0 ) Unhandled ();
}

function hTuerFlur_AnyClick()
{
	if ( any_click_on_door(6, oTuerFlur, 31, 134, eDirLeft, 6, 381, 126, eDirDown) == 0 ) Unhandled ();
}


/****************************
*   Objekt-Funktionen
****************************/


/****************************
*   Hotspot-Funktionen
****************************/
function hKalender_AnyClick()
{
	DateTime *dt = DateTime.Now;
	if (any_click_move(71, 127, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			// wird jedes Jahr das aktuelle Jahr anzeigen
			player.Say("Play-Mummy %d.", dt.Year);
			if ( player == cSyd )
			{
				player.Say("Den kaufe ich mir jedes Jahr.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed nix brauchen tote eingewickelte nackte Frauen auf Blätter.");
			}
			else
			{			
				player.Say("Lassen wir ihn wo er ist.");
			}
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Nett sein.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Ich blätter erst nächsten Monat um, damit die Spannung bleibt.");
			}
			else
			{
				player.Say("Viele eingewickelte Frauen räkeln sich mehr oder weniger auf den einzelnen Blättern dieses Kalenders.");
				player.Say("Mache estethisch, manche leicht anzüglich. Aber immer so, dass man gerade so nichts sieht.");
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed nicht schrauben an Syds Kalender. Achmed einmal versucht ...");
			}
			else if ( player == cSyd )
			{			
				player.Say("Wenn ich ihn schließe zeigt er nur das Deckblatt.");
				player.Say("Aber dann weiß ich das aktuelle Datum nicht mehr.");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Nix da.");
			}
			else
			{			
				player.Say("Dann fällt er nur runter.");
			}
		}
		else Unhandled();
	}
}

function hHaken_AnyClick()
{
	if (any_click_move(71, 127, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed auch haben Haken für Schlüssel.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Hier hänge ich immer meine Schlüssel auf.");
				player.FaceDirection(eDirDown);
				player.Say("Hey, wo sind denn meine Schlüssel?");
			}
			else
			{
				player.Say("Ein Schlüsselhaken. Scheinbar ohne Schlüssel.");
			}
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Sein festgemacht an Wand.");
			}
			else
			{			
				player.Say("Hnngh. Sitzt verdammt fest in der Wand.");
			}
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed nix wollen seine Schlüssel hängen an Haken von Syd.");
			}
			else
			{			
				player.Say("Ich habe keinen Schlüssel den ich aufhängen könnte.");
			}
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Witzbold.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Witzbold.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Was sollen Achmed?");
			}
			else
			{			
				player.Say("Was soll ich denn damit?");
			}
		}
		else Unhandled();
	}
}

function hPoster_AnyClick()
{
	if (any_click_move(219, 132, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Poster von Syd sein. Achmed vergessen, wer Mann auf Poster.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Oh man, dieses Poster ist sooo alt.");
				player.FaceDirection(eDirDown);
				player.Say("Wer ist eigentlich dieser Ron Gilbert?");
			}
			else
			{
				player.Say("Ein Poster aus vergangenen Tagen.");
			}				
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Achmed nix zerstören Poster oder Wand von Syd.");
			}
			else
			{			
				player.Say("Dann geht die Tapete kaputt!");
			}
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			player.Say("Jaja!");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Poster sein festgemacht.");
			}
			else if ( player == cSyd )
			{			
				player.Say("Das Poster lässt sich nicht von der Wand lösen.");
			}
			else
			{
				player.Say("Das Poster ist fest mit der Wand verklebt. Nur mit viel Geduld bringt man es von der Wand.");
			}				
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Nein.");
			}
			else
			{			
				player.Say("Wenn ich es von der Wand lösen könnte, dann kann ich es zusammenrollen.");
			}
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( player == cAchmed )
			{
				player.Say("Fest an Wand gemacht sein.");
			}
			else
			{			
				player.Say("Das sitzt fest an der Wand.");
			}
		}
		else Unhandled();
	}
}

function oBucket_AnyClick()
{
  if (any_click_move(277, 140, eDirRight))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Gab einen Wasserschaden in Wohnung oben drüber.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Der ist bereits in Verwendung.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Nein. Dann gäbe es hier bald eine Sauerei.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Da ist kein Deckel drauf, den man öffnen könnte.");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Da ist kein Deckel drauf, den man schließen könnte.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic != 722)
        {
          player.Say("Besser nicht. Wer weiß, wie viel da noch runter kommt.");
        } else player.Say("Da gibts nichts reinzuleeren.");
      } else Unhandled();
    }
    else Unhandled();
  }
}

/****************************
*   Regionen-Funktionen
****************************/

