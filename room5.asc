// Flur im ersten Stock (Syd)

// Used to save Syd's coordinates when talking to Jeff.
int syd_x;
int syd_y;

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oTuer.init_object(9);
	oTuerStahl.Clickable = false; // The room behind this door doesn't exist yet. But the object for the opened door has already been implemented.
  
  if (cEd.Room == 25 && player.HasInventory(iHamster)) // The player got the hamster. Now, Ed is moved to the entrance of the S-Mart.
  {
    cEd.ChangeRoom(7, 56, 133);
    cEd.FaceDirection(eDirDown);
    edExpressions(eSad);
  }
  
  if (player == cNix) // The player talks with Jeff about his grandfathers. Preparations for the scene with the atm machine.
  {
    cBaenker1.ChangeRoom(5,  123,  126);
    cBaenker1.FaceDirection(eDirRight);
    cBaenker2.ChangeRoom(5,  212,  126);
    cBaenker2.FaceDirection(eDirLeft);
    oATMachine.Visible = true;
    syd_x = cSyd.x;
    syd_y = cSyd.y;
    cSyd.ChangeRoom(5, 474, 132);
    ControllMode(false, false);
  }
}

function room_AfterFadeIn()
{
  Game.StopAudio(eAudioTypeAmbientSound);
	if (player.PreviousRoom != 6 && player.PreviousRoom != 17) // Prevents the bgm from starting all over again when entering from the other floor.
  {
    aMusic14.Play();
  }
  
  if (player == cNix) // Scene with Jeff's grandfathers starts now.
  {
    cBaenker2.Say("Würde mich ja interessieren, wer das verbockt hat.");
    cBaenker1.Say("Ich kanns mir denken.");
    cSyd.Walk(170, 142, eBlock, eWalkableAreas);
    cSyd.FaceDirection(eDirUp);
    cSyd.Say("Was macht ihr denn da?");
    cBaenker1.FaceDirection(eDirDown);
    cBaenker2.FaceDirection(eDirDown);
    cBaenker2.Say("Nach was siehts denn aus?");
    cBaenker1.Say("Bank überfallen.");
    cBaenker2.Say("Irgendwer aus der Firma hat den Kontoauszugdrucker hier aufstellen lassen, anstatt in unserer Filiale.");
    cBaenker1.Say("Und wir dürfen hinterher wischen.");
    cSyd.Say("Den Verantwortlichen würde ich rausschmeißen.");
    cBaenker1.Say("Wurde er bereits.");
    cBaenker1.Say("Hat aber seltsamerweise gleich ein neues Jobangebot bekommen.");
    cBaenker2.FaceDirection(eDirLeft);
    cBaenker2.Say("Wirklich? Als was?");
    cBaenker1.FaceDirection(eDirRight);
    cBaenker1.Say("Irgendwas mit \"Flughäfen bauen, Deutschland\".");
    cBaenker2.Say("Ich dachte, er ist nochmal zur Uni gegangen und studiert jetzt Informatik?");
    Wait(50);
    cBaenker1.Say("Auch möglich.");
    cBaenker1.FaceDirection(eDirDown);
    cBaenker2.FaceDirection(eDirDown);
    cSyd.Say("Seit ihr verwandt?");
    cBaenker2.Say("Warum fragst du?");
    cSyd.Say("Ihr seht euch so ähnlich?");
    cBaenker1.Say("Das liegt daran, das wir bei ATM U auch alles über das richtige Aussehen von Bänkern lernen.");
    cSyd.Say("ATM U?");
    cBaenker2.Say("Universität fürs Bankwesen.");
    Wait(20);
    cNix.ChangeRoom(13);
  }
  else if (player.PreviousRoom == 17)
  {
    Wait(10);
    player.Say("Ich hab immer noch nichts gegessen.");
    FadeOut(3);    
    player.ChangeRoom(17);
  }
}

function room_Leave()
{
  if (player == cNix) // Scene with Jeff's grandfathers has ended and the player returns to the Shack.
  {
    oATMachine.Visible = false;
    cBaenker1.ChangeRoom(0);
    cBaenker2.ChangeRoom(0);
    cSyd.ChangeRoom(13, syd_x, syd_y);
    cSyd.FaceDirection(eDirUp);
    cSyd.SetAsPlayer();
    cNix.ChangeRoom(0);
    ControllMode(true, true);
  }
}

/****************************
*   Tür-Hotspot-Funktionen
****************************/



/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
  if (any_click_move(383, 122, eDirUp))
  {
    // nur einkommentieren, wenn andere Personen auch bei offener Tür herinkommen sollen
     /*if ( oTuer.Visible )
     {
       if ( any_click_on_door(9, oTuer, 383, 122, eDirUp, 20, 31, 134, eDirRight) == 0 ) Unhandled ();
     }
     else*/
     {
      if (UsedAction(eActWalkTo))
      {
      //	Wait(5);
      }
      else if (UsedAction(eActClose) && oTuer.Visible == true)
      {
        if ( any_click_on_door(9, oTuer, 383, 122, eDirUp, 20, 31, 134, eDirRight) == 0 ) Unhandled ();
      }
      else
      {
        player.Say("Ich sollte wohl klingeln.");
      }
    }
  }
}

function hEisentuer_AnyClick()
{
	if (any_click_move(138, 126, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Achmed sich stets fragen: Was sein hinter Tür?"))
				player.Say("Was war nochmal hinter dieser Tür?");
			if ( !cAchmed.SayIfPlayer("Vielleicht Labor oder Schrank mit Besen?"))
				player.Say("Besenkammer? Waschküche? Keller?");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("???");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Verschlossen sein."))
				player.Say("Die ist verschlossen.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Sein schon zu."))
				player.Say("Ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("???");
		}
    else if (UsedAction(eActUseInventory))
    {
      if (player.ActiveInventory == iGlas && iGlas.Graphic == 725)
      {
        Wait(5);
        player.Say("Das wäre eine Verschwendung der Milchsockensäure.");
      } else Unhandled();
    }
		else Unhandled();
	}
}

function hBriefkaesten_AnyClick()
{
	if (any_click_move(255, 128, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Das sein sehr viele schöne Kasten."))
				player.Say("Jeder Mieter hat hier einen eigenen Briefkasten.");
			player.FaceDirection(eDirDown);
			if ( !cAchmed.SayIfPlayer("Wo Achmeds bloß sein?"))
				player.Say("Welcher gehört mir eigentlich?");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActPull))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Achmed nix brauchen Briefdings."))
				player.Say("Nein, die Briefkästen bleiben an der Wand.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActOpen))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Wo haben Achmed seinen Schlüssel?"))
				player.Say("Ich habe den Schlüssel nicht dabei ...");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Sein zu."))
				player.Say("Die sind schon zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Gut."))
				player.Say("Damit er umfällt?");
		}
		else Unhandled();
	}
}

function hTuerklingel_AnyClick()
{
	if (any_click_move(414, 127, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Das sein Achmeds Türklingel."))
				player.Say("Das ist Achmeds Türklingel.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			player.Say("Nix da.");
		}
		else if (UsedAction(eActUse) ||UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(99);
      Wait(100);
			if ( !cAchmed.SayIfPlayer("Nix öffnet."))
				player.Say("Es öffnet niemand.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			player.Say("Ja klar.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			player.Say("Warum?");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			player.Say("Nix da.");
		}
		else Unhandled();
	}
}

function hFeuerloescher_AnyClick()
{
	if (any_click_move(444, 126, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Löschen von brennenden Feuer."))
				player.Say("In dem Kasten ist der Feuerlöscher.");
			player.FaceDirection(eDirDown);
			if ( !cAchmed.SayIfPlayer("Wo brennt?"))
				player.Say("Das ist so Vorschrift.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Nix brennt, also Achmed auch nicht brauchen."))
				player.Say("Ich brauche im Moment keinen Feuerlöscher.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Hier sein kein Feuer!"))
				player.Say("Nein, nur in Notfällen!");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Sein schon zu."))
				player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPush))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Sollen umfallen, ja?"))
				player.Say("Damit er umfällt?");
		}
		else Unhandled();
	}
}

function hMuelleimer_AnyClick()
{
	if (any_click_move(475, 135, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Das sein Eimer für Müll."))
				player.Say("Das ist der Mülleimer.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Nein Effendi."))
				player.Say("Warum?");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Achmed nix haben zum tun rein."))
				player.Say("Wenn ich was habe zum Reinwerfen.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Das sein bereits auf."))
				player.Say("Ist bereits auf.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Eimer nix haben Deckel."))
				player.Say("Der hat keinen Deckel.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Pffft.");
		}
		else Unhandled();
	}
}

function hLueftungsschacht_AnyClick()
{
	if (any_click_move(82, 130, eDirLeft))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Sein Lüftungsschacht."))
				player.Say("Ein Lüftungsschacht.");
		}
		else if (UsedAction(eActPickUp) || UsedAction(eActUse))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Warum?"))
				player.Say("Keine Lust.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Das bleiben zu."))
				player.Say("Das erinnert mich an früher, als ich hier mal ein Stück Käse versteckt hatte ...");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Sein schon zu."))
				player.Say("Das ist schon zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			player.Say("Nix da.");
		}
		else Unhandled();
	}
}

function hDraussen_AnyClick()
{
	if (any_click_move(47, 134, eDirLeft))
	{
		if (UsedAction (eActWalkTo) || UsedAction(eActUse))
		{
			Wait(5);
			player.ChangeRoom(7, 265, 123);
			player.FaceDirection(eDirDown);
		}
    else if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Da gehts nach draußen.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActOpen) || UsedAction(eActClose) || UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Das ergibt keinen Sinn.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iPortemonnaie || player.ActiveInventory == iCashCard) player.Say("Die Treppe kann ich umsonst benutzen.");
      else if (player.ActiveInventory == iMilk) player.Say("Ich möchte die Milch nicht über die Treppe schütten.");
      else if (player.ActiveInventory == iFarbeimer) player.Say("Die Treppe braucht keinen lila Anstrich.");
      else if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 722 || iGlas.Graphic == 724 ) player.Say("Das ergibt keinen Sinn."); // Empty or sock.
        else if (iGlas.Graphic == 726) player.Say("Ich möchte das Wasser nicht über die Treppe schütten."); // Water.
        else if (iGlas.Graphic == 723) player.Say("Ich möchte die Milch nicht über die Treppe schütten."); // Milk.
        else if (iGlas.Graphic == 725) player.Say("Die Treppe muss nicht weggeätzt werden."); // Milk Sock Acid.
      }
      else player.Say("Das ergibt keinen Sinn.");
    }
	}
	else Unhandled ();
}

function hTreppe_AnyClick()
{
	if (any_click_move(528, 14, eDirUp))
	{
		if (UsedAction (eActWalkTo) || UsedAction(eActUse))
		{
			Wait(5);
			player.ChangeRoom(6, 47, 134);
      player.FaceDirection(eDirRight);
		}
    else if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Da gehts nach oben.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActOpen) || UsedAction(eActClose) || UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Das ergibt keinen Sinn.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iPortemonnaie || player.ActiveInventory == iCashCard) player.Say("Die Treppe kann ich umsonst benutzen.");
      else if (player.ActiveInventory == iMilk) player.Say("Ich möchte die Milch nicht über die Treppe schütten.");
      else if (player.ActiveInventory == iFarbeimer) player.Say("Die Treppe braucht keinen lila Anstrich.");
      else if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 722 || iGlas.Graphic == 724 ) player.Say("Das ergibt keinen Sinn."); // Empty or sock.
        else if (iGlas.Graphic == 726) player.Say("Ich möchte das Wasser nicht über die Treppe schütten."); // Water.
        else if (iGlas.Graphic == 723) player.Say("Ich möchte die Milch nicht über die Treppe schütten."); // Milk.
        else if (iGlas.Graphic == 725) player.Say("Die Treppe muss nicht weggeätzt werden."); // Milk Sock Acid.
      }
      else player.Say("Das ergibt keinen Sinn.");
    }
	}
	else Unhandled ();
}

/****************************
*   Regionen-Funktionen
****************************/

