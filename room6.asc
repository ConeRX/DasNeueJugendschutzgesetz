// Flur zweiter Stock (Syd)

/****************************
*   Variables
****************************/

bool bClousoPhone;

/****************************
*   Raum-Funktionen
****************************/
function room_Load()
{
	oTuer.init_object(6);
  RemoveWalkableArea(2);
  hNachOben.Enabled = false;
}

function room_AfterFadeIn()
{
  if (player.PreviousRoom != 5) // Prevents the bgm from starting all over again when entering from the other floor.
  {
    aMusic14.Play();
  }
}


/****************************
*   Tür-Hotspot-Funktionen
****************************/
function hTuer_AnyClick()
{
	if ( cSyd == player )
	{
		if ( any_click_on_door(6, oTuer, 382, 125, eDirUp, 3, 31, 135, eDirRight) == 0 ) Unhandled ();
	}
	else
	{
		if (any_click_move(382, 125, eDirUp))
		{
			// nur einkommentieren, wenn andere Personen auch bei offener Tür herinkommen sollen
			 /*if ( oTuer.Visible )
			 {
				 if ( any_click_on_door(6, oTuer, 382, 125, eDirUp, 3, 31, 135, eDirRight) == 0 ) Unhandled ();
			 }
			 else*/
			 {
				if (UsedAction(eActWalkTo))
				{
				//	Wait(5);
				}
				else if (UsedAction(eActClose) && oTuer.Visible == true)
				{
					if ( any_click_on_door(6, oTuer, 382, 125, eDirUp, 3, 31, 135, eDirRight) == 0 ) Unhandled ();
				}
			
				else if ( cAchmed == player )
				{
					player.Say("Achmed sollten vorher klingeln.");
				}
				else
				{
					player.Say("Ich sollte wohl klingeln.");
				}
			}
		}
	}
}


/****************************
*   Objekt-Funktionen
****************************/



/****************************
*   Hotspot-Funktionen
****************************/
function hTuerNebenan_AnyClick()
{
	if (any_click_move(138, 123, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Hier niemand wohnen."))
      if (dClouso.HasOptionBeenChosen(1) || dClouso.HasOptionBeenChosen(2) || dClouso.HasOptionBeenChosen(3) || dClouso.HasOptionBeenChosen(4)) // Checks if Syd has already talked with Clouso.
      {
        player.Say("Hier wohnt jetzt Inspektor Clouso.");
      } else player.Say("Hier wohnt zur Zeit niemand.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Tür sein fest."))
				player.Say("Die Tür ist fest mit dem Rahmen verbunden.");
		}
		else if (UsedAction(eActUse))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Achmed nix benutzen wollen."))
				player.Say("Das bringt mir nichts.");
		}
		else if (UsedAction(eActOpen))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Tür sein geschlossen zu."))
			{
				player.Say("Abgeschlossen.");
				player.Say("Naja. Es ist ja auch nicht meine Wohnung.");
			}
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Tür sein doch schon zu."))
				player.Say("Die Tür ist bereits zu.");
		}
		else if (UsedAction(eActPull) || UsedAction(eActPush))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Achmed nix verstehen das."))
				player.Say("Ähhh ... nein.");
		}
		else Unhandled();
	}
}

function hKlingel_AnyClick()
{
	if (any_click_move(414, 127, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			cSyd.SayIfPlayer("Ich sollte hier mal ein Namensschild anbringen.");
			cAchmed.SayIfPlayer("Klingel von Syd.");
			player.FaceDirection(eDirDown);
			cSyd.SayIfPlayer("Sobald mir mein Nachname wieder eingefallen ist ...");
			cAchmed.SayIfPlayer("Syd sein Achmeds Freund.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Deckel bleiben drauf."))
				player.Say("Ich lass die Abdeckung lieber drauf.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
			Wait(5);
			PlaySound(99);
      Wait(100);
			if ( cAchmed.SayIfPlayer("Syd nicht machen auf. Vielleicht er nicht zuhause sein.") )
			{
			}
			else if ( cSyd.SayIfPlayer("Außer mir wohnt niemand da drin.") )
			{
			}
			else
			{
				player.Say("Mister äh ... 'Syd' scheint nicht da zu sein. Wie heißt der eigentlich sonst noch?");
			}
		}
		else if (UsedAction(eActOpen) || UsedAction(eActPull))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Achmed nix machen das kaputt. Sonst immer heißen Achmeds Landsleute seien Baraber."))
				player.Say("Ich lass die Abdeckung lieber drauf.");
		}
		else if (UsedAction(eActClose))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Nix können schließen hier."))
				player.Say("Die Abdeckung ist bereits drauf.");
		}
		else Unhandled();
	}
}

function hKlingelNebenan_AnyClick()
{
	if (any_click_move(175, 129, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
		//	Wait(5);
		}
		else if (UsedAction(eActLookAt))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Schild zeigen nichts an."))
				player.Say("Da steht nichts drauf.");
		}
		else if (UsedAction(eActPickUp))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Hinterher Achmed wieder Schuld ..."))
				player.Say("Dann fehlt aber eine Klingel.");
		}
		else if (UsedAction(eActUse) || UsedAction(eActPush))
		{
      if (dClouso.HasOptionBeenChosen(1) && dClouso.HasOptionBeenChosen(2) && dClouso.HasOptionBeenChosen(3)) // Checks if there's still something Syd can talk about with Clouso.
      {
        player.Say("Ich wüsste nicht, über was ich noch mit dem Inspektor reden sollte.");
      }
      else
      {
        Wait(5);
        cClou.FaceDirection(eDirDown);
        PlaySound(99);
        Wait(20);
        PlaySound(2);
        oDoorClouso.Visible=true;
        Wait(5);
        cClou.ChangeRoom(6);
        Wait(20);
        cClou.FaceDirection(eDirRight);
        player.FaceDirection(eDirLeft);
        Wait(5);
        player.Say("Hallo Inspektor.");
        Wait(10);
        ControllMode(false, true);
        dClouso.Start();
        if (bClousoPhone == false)
        {
          oPhone.Visible=true;
          bClousoPhone=true;
        }
      }
		}
		else if (UsedAction(eActOpen) || UsedAction(eActClose))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Achmed sagen: \"NEIN\"."))
				player.Say("Das bringt nichts.");
		}
		else if (UsedAction(eActPull))
		{
			Wait(5);
			if ( !cAchmed.SayIfPlayer("Achmed kriegen nicht lose."))
				player.Say("Die ist festgemacht.");
		}
		else Unhandled();
	}
}

function hNachUnten_AnyClick()
{
	if (any_click_move(47, 134, eDirLeft))
	{
		if (UsedAction (eActWalkTo) || UsedAction(eActUse))
		{
			Wait(5);
			player.ChangeRoom(5, 539, 39);
			player.FaceDirection(eDirDown);
		}
    else if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Da gehts nach unten.");
    }
    else if (UsedAction(eActPickUp) || UsedAction(eActOpen) || UsedAction(eActClose) || UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Das ergibt keinen Sinn.");
    }
    else if (UsedAction(eActUseInventory))
    {
      Wait(5);
      if (player.ActiveInventory == iPortemonnaie || player.ActiveInventory == iCashCard) player.Say("Die Treppe kann ich umsonst benutzen.");
      else if (player.ActiveInventory == iMilk) player.Say("Ich möchte die Milch nicht über die Treppe schütten.");
      else if (player.ActiveInventory == iFarbeimer) player.Say("Die Treppe braucht keinen lila Anstrich.");
      else if (player.ActiveInventory == iGlas)
      {
        if (iGlas.Graphic == 722 || iGlas.Graphic == 724 ) player.Say("Das ergibt keinen Sinn."); // Empty or sock.
        else if (iGlas.Graphic == 726) player.Say("Ich möchte die Milch nicht über die Treppe schütten."); // Water.
        else if (iGlas.Graphic == 723) player.Say("Ich möchte die Milch nicht über die Treppe schütten."); // Milk.
        else if (iGlas.Graphic == 725) player.Say("Die Treppe muss nicht weggeätzt werden."); // Milk Sock Acid.
      }
      else player.Say("Das ergibt keinen Sinn.");
    }
	}
	else Unhandled ();
}

function hNachOben_AnyClick()
{
	if (any_click_move(528, 14, eDirUp))
	{
		if (UsedAction(eActWalkTo))
		{
			Wait(5);
			// Wenn die dritte Etage gesperrt werden soll ...
/*			MovePlayer(577, 119);
			player.FaceDirection(eDirDown);
			if ( !cAchmed.SayIfPlayer("Da wohnen Inspektor ..."))
				player.Say("Da oben ist die 3. Etage und der Weg zum Dachboden.");
			Wait(10);
			//player.Say("Glaube ich jedenfalls ...");
			if ( !cAchmed.SayIfPlayer("Achmed nicht wollen zu Inspektor."))
				player.Say("Da will ich jetzt nicht hin");
*/
			//player.ChangeRoom(22, 47, 134);
			//player.FaceDirection(eDirRight);
		}
		else Unhandled();
	}
}

/****************************
*   Object-Funktionen
****************************/

function oPhone_AnyClick()
{
  if (any_click_move(140, 125, eDirLeft))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Ein Handy.");
    }
    else if (UsedAction(eActUse) || UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Dafür muss ich es erstmal aufheben.");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Das muss dem Inspektor gerade aus der Tasche gefallen sein.");
      Wait(5);
      player.Say("Jetzt gehört es mir!");
      PlaySound(4);
      oPhone.Visible=false;
      player.AddInventory(iPhone);   
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Das ist kein Klapphandy. Außerdem muss ich es erstmal aufheben.");
    }
    else if (UsedAction(eActPull) || UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Es bringt rein gar nichts, wenn ich es auf dem Fußboden hin und her bewege.");
    }
    else Unhandled();
  }
}

function oSign_AnyClick()
{
  if (any_click_move(519, 137, eDirRight))
  {
    if (UsedAction(eActLookAt))
    {
      Wait(5);
      player.Say("Der dritte Stock ist momentan abgesperrt.");
      player.Say("Gab einen Wasserschaden.");
    }
    else if (UsedAction(eActUse))
    {
      Wait(5);
      player.Say("Mit was soll die Bretter benutzen?");
    }
    else if (UsedAction(eActPickUp))
    {
      Wait(5);
      player.Say("Ich brauche weder das Schild, noch die Bretter.");
    }
    else if (UsedAction(eActOpen))
    {
      Wait(5);
      player.Say("Ich möchte den Weg nach oben nicht wieder öffnen. Wozu denn?");
    }
    else if (UsedAction(eActClose))
    {
      Wait(5);
      player.Say("Das ergibt keinen Sinn.");
    }
    else if (UsedAction(eActPull))
    {
      Wait(5);
      player.Say("Es bringt nichts, dran rum zu ziehen.");
    }
    else if (UsedAction(eActPush))
    {
      Wait(5);
      player.Say("Es bringt nichts, dran rum zu drücken.");
    }
    else Unhandled();
  }
}

/****************************
*   Regionen-Funktionen
****************************/

